{"code":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\nimport * as React from 'react';\r\nimport { Form, Input, useCMS, Modal, ModalPopup, ModalHeader, ModalBody, ModalActions, FormBuilder, FieldsBuilder, } from 'tinacms';\r\nimport { AddIcon, ChevronDownIcon, LockIcon } from '@tinacms/icons';\r\nimport { Button } from '@tinacms/styles';\r\nimport { Dismissible } from 'react-dismissible';\r\nimport styled, { css } from 'styled-components';\r\nimport { LoadingDots } from '@tinacms/react-forms';\r\nconst BranchSwitcher = ({ onBranchChange }) => {\r\n    const cms = useCMS();\r\n    const github = cms.api.github;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [confirmSwitchProps, setConfirmSwitchProps] = React.useState();\r\n    const [createBranchProps, setCreateBranchProps] = React.useState();\r\n    const [filterValue, setFilterValue] = React.useState('');\r\n    const selectListRef = React.useRef();\r\n    const [branchStatus, setBranchStatus] = React.useState('pending');\r\n    const [branches, setBranches] = React.useState([]);\r\n    const updateBranchList = React.useCallback(() => {\r\n        github\r\n            .getBranchList()\r\n            .then(branches => {\r\n            setBranches(branches);\r\n            setBranchStatus('loaded');\r\n        })\r\n            .catch(() => {\r\n            setBranchStatus('error');\r\n        });\r\n    }, [github, setBranches, setBranchStatus]);\r\n    React.useEffect(() => {\r\n        updateBranchList();\r\n        cms.events.subscribe('github:branch:create', updateBranchList);\r\n    }, []);\r\n    const closeDropdown = () => {\r\n        setOpen(false);\r\n        setFilterValue('');\r\n        if (selectListRef.current) {\r\n            selectListRef.current.scrollTop = 0;\r\n        }\r\n    };\r\n    const openCreateBranchModal = () => {\r\n        setCreateBranchProps({ name: filterValue });\r\n        closeDropdown();\r\n    };\r\n    const filteredBranches = branches.filter(option => {\r\n        return option.name.includes(filterValue);\r\n    });\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(SelectWrapper, null,\r\n            React.createElement(SelectBox, { onClick: () => setOpen(!open), open: open },\r\n                React.createElement(SelectLabel, null, \"Branch\"),\r\n                React.createElement(SelectCurrent, null, github.branchName),\r\n                React.createElement(ChevronDownIcon, null)),\r\n            React.createElement(SelectDropdown, { open: open },\r\n                React.createElement(Dismissible, { click: true, escape: true, disabled: !open, onDismiss: closeDropdown },\r\n                    React.createElement(DropdownHeader, null,\r\n                        React.createElement(SelectFilter, { placeholder: \"Filter\", onChange: event => setFilterValue(event.target.value), value: filterValue })),\r\n                    React.createElement(SelectList, { ref: selectListRef },\r\n                        branchStatus === 'pending' && (React.createElement(SelectLoadingState, null,\r\n                            React.createElement(LoadingDots, { color: \"var(--tina-color-primary)\" }))),\r\n                        branchStatus === 'loaded' && (React.createElement(React.Fragment, null,\r\n                            filteredBranches.map(option => (React.createElement(SelectOption, { key: option.name, active: option.name === github.branchName, onClick: () => {\r\n                                    setConfirmSwitchProps(option);\r\n                                    closeDropdown();\r\n                                } },\r\n                                option.protected && React.createElement(LockIcon, null),\r\n                                \" \",\r\n                                option.name))),\r\n                            filteredBranches.length === 0 && (React.createElement(SelectEmptyState, null, \"No branches to display.\")))),\r\n                        branchStatus === 'error' && (React.createElement(SelectEmptyState, null, \"We had trouble loading branches. Please refresh to try again.\"))),\r\n                    React.createElement(DropdownActions, null,\r\n                        React.createElement(CreateButton, { onClick: openCreateBranchModal },\r\n                            React.createElement(AddIcon, null),\r\n                            \" New Branch\"))))),\r\n        createBranchProps && (React.createElement(CreateBranchModal, { current: github.branchName, name: createBranchProps.name, onBranchChange: (name) => {\r\n                if (onBranchChange) {\r\n                    onBranchChange(name);\r\n                }\r\n                setCreateBranchProps(null);\r\n            }, close: () => {\r\n                setCreateBranchProps(null);\r\n            } })),\r\n        confirmSwitchProps && (React.createElement(ConfirmSwitchBranchModal, { name: confirmSwitchProps.name, onBranchChange: () => {\r\n                cms.alerts.info('Switched to branch ' + confirmSwitchProps.name);\r\n                github.setWorkingBranch(confirmSwitchProps.name);\r\n                closeDropdown();\r\n                if (onBranchChange) {\r\n                    onBranchChange(confirmSwitchProps.name);\r\n                }\r\n                setConfirmSwitchProps(null);\r\n                setCreateBranchProps(null);\r\n                cms.events.dispatch({\r\n                    type: 'github:branch:checkout',\r\n                    branchName: confirmSwitchProps.name,\r\n                });\r\n            }, close: () => {\r\n                setConfirmSwitchProps(null);\r\n            } }))));\r\n};\r\nconst CreateBranchModal = ({ current, name, onBranchChange, close }) => {\r\n    const cms = useCMS();\r\n    const form = React.useMemo(() => new Form({\r\n        label: 'create-branch',\r\n        id: 'create-branch-id',\r\n        initialValues: {\r\n            name,\r\n        },\r\n        fields: [{ label: 'Branch Name', name: 'name', component: 'text' }],\r\n        async onSubmit({ name }) {\r\n            try {\r\n                await cms.api.github.createBranch(name);\r\n                cms.events.dispatch({\r\n                    type: 'github:branch:create',\r\n                    branchName: name,\r\n                });\r\n                cms.api.github.setWorkingBranch(name);\r\n                cms.events.dispatch({\r\n                    type: 'github:branch:checkout',\r\n                    branchName: name,\r\n                });\r\n                if (onBranchChange) {\r\n                    onBranchChange(name);\r\n                }\r\n            }\r\n            catch (error) {\r\n                cms.events.dispatch({ type: 'github:error', error });\r\n            }\r\n        },\r\n    }), [cms]);\r\n    return (React.createElement(Modal, null,\r\n        React.createElement(FormBuilder, { form: form }, ({ handleSubmit }) => {\r\n            return (React.createElement(ModalPopup, null,\r\n                React.createElement(ModalHeader, { close: close }, \"Create Branch\"),\r\n                React.createElement(ModalBody, { onKeyPress: e => e.charCode === 13 ? handleSubmit() : null },\r\n                    React.createElement(FieldsBuilder, { form: form, fields: form.fields }),\r\n                    React.createElement(ModalText, null,\r\n                        React.createElement(\"p\", null,\r\n                            \"Create branch\\u00A0\",\r\n                            React.createElement(BranchName, null, name),\r\n                            \"\\u00A0from '\",\r\n                            current,\r\n                            \"'\"))),\r\n                React.createElement(ModalActions, null,\r\n                    React.createElement(Button, { onClick: close }, \"Cancel\"),\r\n                    React.createElement(Button, { onClick: handleSubmit, primary: true }, \"Create\"))));\r\n        })));\r\n};\r\nconst ConfirmSwitchBranchModal = ({ name, onBranchChange, close }) => {\r\n    return (React.createElement(Modal, null,\r\n        React.createElement(ModalPopup, null,\r\n            React.createElement(ModalHeader, { close: close }, \"Switch Branch\"),\r\n            React.createElement(ModalBody, { padded: true, onKeyPress: e => e.charCode === 13 ? onBranchChange() : null },\r\n                React.createElement(\"p\", null,\r\n                    \"Are you sure you want to switch to branch\",\r\n                    ' ',\r\n                    React.createElement(BranchName, null, name),\r\n                    \"?\")),\r\n            React.createElement(ModalActions, null,\r\n                React.createElement(Button, { onClick: close }, \"Cancel\"),\r\n                React.createElement(Button, { onClick: onBranchChange, primary: true }, \"Switch Branch\")))));\r\n};\r\nconst ModalText = styled.div `\n  padding: 0 var(--tina-padding-big) var(--tina-padding-big)\n    var(--tina-padding-big);\n`;\r\nconst SelectFilter = styled(Input) `\n  height: 36px;\n  flex: 0 1 auto;\n\n  ::placeholder {\n    color: var(--tina-color-grey-4);\n  }\n`;\r\nconst CreateButton = styled(Button) `\n  display: flex;\n  align-items: center;\n  height: 36px;\n\n  svg {\n    width: 24px;\n    margin-right: 4px;\n    opacity: 0.7;\n  }\n`;\r\nconst BranchName = styled.span `\n  font-weight: bold;\n  color: var(--tina-color-primary);\n`;\r\nconst DropdownActions = styled.div `\n  background-color: var(--tina-color-grey-1);\n  border-top: 1px solid var(--tina-color-grey-2);\n  padding: var(--tina-padding-small);\n`;\r\nconst DropdownHeader = styled.div `\n  padding: var(--tina-padding-small);\n  border-bottom: 1px solid var(--tina-color-grey-2);\n`;\r\nconst SelectEmptyState = styled.div `\n  display: block;\n  border: none;\n  outline: none;\n  padding: var(--tina-padding-small);\n  background: transparent;\n  color: var(--tina-color-grey-4);\n  text-align: left;\n  font-size: var(--tina-font-size-2);\n  line-height: 1.4;\n  width: 100%;\n  transition: all 150ms ease-out;\n  flex: 0 0 auto;\n`;\r\nconst SelectLoadingState = styled.div `\n  display: flex;\n  border: none;\n  outline: none;\n  padding: var(--tina-padding-small);\n  background: transparent;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 auto;\n`;\r\nconst SelectOption = styled.button `\n  display: lock;\n  border: none;\n  outline: none;\n  padding: 4px var(--tina-padding-small);\n  background: transparent;\n  color: var(--tina-color-grey-6);\n  text-align: left;\n  font-size: var(--tina-font-size-2);\n  line-height: 1.2;\n  white-space: nowrap;\n  width: 100%;\n  cursor: pointer;\n  transition: all 150ms ease-out;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  overflow: hidden;\n  flex: 0 0 auto;\n\n  svg {\n    width: 20px;\n    height: auto;\n    margin: -4px -4px -4px -4px;\n    fill: currentColor;\n    opacity: 0.7;\n  }\n\n  :first-child {\n    padding-top: 8px;\n  }\n\n  :last-child {\n    padding-bottom: 8px;\n  }\n\n  :hover {\n    color: var(--tina-color-primary);\n    background-color: var(--tina-color-grey-1);\n  }\n\n  ${p => p.active &&\r\n    css `\n      font-weight: bold;\n      color: var(--tina-color-primary);\n      background-color: var(--tina-color-grey-1);\n      pointer-events: none;\n    `};\n`;\r\nconst SelectList = styled.div `\n  min-width: 200px;\n  max-height: 170px;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n`;\r\nconst SelectWrapper = styled.div `\n  position: relative;\n`;\r\nconst SelectDropdown = styled.div `\n  position: absolute;\n  bottom: -4px;\n  left: 50%;\n  transform: translate3d(-50%, calc(100% - 16px), 0) scale3d(0.5, 0.5, 1);\n  border-radius: var(--tina-radius-small);\n  border: 1px solid var(--tina-color-grey-2);\n  box-shadow: var(--tina-shadow-big);\n  background-color: white;\n  transform-origin: 50% 0;\n  pointer-events: none;\n  transition: all 150ms ease-out;\n  opacity: 0;\n  width: 350px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate3d(-50%, -100%, 0);\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-bottom: 10px solid var(--tina-color-grey-2);\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 1px;\n    left: 50%;\n    transform: translate3d(-50%, -100%, 0);\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-bottom: 10px solid white;\n  }\n\n  ${p => p.open &&\r\n    css `\n      opacity: 1;\n      pointer-events: auto;\n      transform: translate3d(-50%, 100%, 0) scale3d(1, 1, 1);\n    `};\n`;\r\nconst SelectBox = styled.button `\n  border-radius: var(--tina-radius-small);\n  border: 1px solid var(--tina-color-grey-2);\n  background-color: white;\n  padding: 5px 42px 5px var(--tina-padding-small);\n  position: relative;\n  outline: none;\n  cursor: pointer;\n  min-width: 140px;\n  transition: all 150ms ease-out;\n\n  :hover {\n    background-color: var(--tina-color-grey-1);\n  }\n\n  svg {\n    fill: var(--tina-color-primary);\n    position: absolute;\n    top: 50%;\n    right: 8px;\n    transform-origin: 50% 50%;\n    transform: translate3d(0, -50%, 0);\n    transition: all 150ms ease-out;\n    width: 24px;\n    height: auto;\n  }\n\n  ${p => p.open &&\r\n    css `\n      background-color: var(--tina-color-grey-1);\n      box-shadow: inset 0px 2px 3px rgba(0, 0, 0, 0.06);\n\n      ${SelectLabel} {\n        color: var(--tina-color-primary);\n      }\n\n      svg {\n        transform: translate3d(0, -50%, 0) rotate(180deg);\n        fill: var(--tina-color-grey-4);\n      }\n    `};\n`;\r\nconst SelectLabel = styled.span `\n  color: var(--tina-color-grey-8);\n  display: block;\n  letter-spacing: 0.01em;\n  line-height: 1;\n  font-size: var(--tina-font-size-1);\n  font-weight: 600;\n  text-align: left;\n  transition: all 150ms ease-out;\n`;\r\nconst SelectCurrent = styled.span `\n  color: var(--tina-color-grey-6);\n  display: block;\n  text-align: left;\n  line-height: 20px;\n  font-size: var(--tina-font-size-3);\n  text-overflow: ellipsis;\n  max-width: 250px;\n  white-space: nowrap;\n  overflow: hidden;\n`;\r\nexport const BranchSwitcherPlugin = {\r\n    __type: 'toolbar:widget',\r\n    name: 'branch-switcher',\r\n    weight: 1,\r\n    component: BranchSwitcher,\r\n};\r\n//# sourceMappingURL=BranchSwitcherPlugin.js.map","references":["/Users/TimMoreton/Code/tinacms/node_modules/@types/react/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/tinacms/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/icons/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/styles/build/index.d.ts","/Users/TimMoreton/Code/tinacms/node_modules/react-dismissible/build/index.d.ts","/Users/TimMoreton/Code/tinacms/node_modules/@types/styled-components/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/github-client/index.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/react-forms/build/index.d.ts"],"map":"{\"version\":3,\"file\":\"BranchSwitcherPlugin.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/toolbar-plugins/BranchSwitcherPlugin.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/toolbar-plugins/BranchSwitcherPlugin.d.ts","writeByteOrderMark":false,"text":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\n/// <reference types=\"react\" />\r\ninterface BranchSwitcherProps {\r\n    onBranchChange?(branch: string): void;\r\n}\r\nexport interface SelectOptionProps {\r\n    active?: boolean;\r\n}\r\nexport interface SelectDropdownProps {\r\n    open?: boolean;\r\n}\r\nexport interface SelectBoxProps {\r\n    open: boolean;\r\n}\r\nexport declare const BranchSwitcherPlugin: {\r\n    __type: string;\r\n    name: string;\r\n    weight: number;\r\n    component: ({ onBranchChange }: BranchSwitcherProps) => JSX.Element;\r\n};\r\nexport {};\r\n"}}
