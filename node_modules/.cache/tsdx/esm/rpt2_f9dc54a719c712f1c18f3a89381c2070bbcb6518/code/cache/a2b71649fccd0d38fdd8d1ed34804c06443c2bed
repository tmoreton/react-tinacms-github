{"code":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\nimport { Button as RawTinaButton } from '@tinacms/styles';\r\nimport { Input, TextArea } from '@tinacms/fields';\r\nimport { ModalBody, ModalActions, FieldMeta, useCMS } from 'tinacms';\r\nimport styled from 'styled-components';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { AsyncButton } from '../../components/AsyncButton';\r\nexport const PRModal = () => {\r\n    const [prError, setPrError] = useState('');\r\n    const [fetchedPR, setFetchedPR] = useState(undefined);\r\n    const cms = useCMS();\r\n    const github = cms.api.github;\r\n    const titleInput = React.createRef();\r\n    const bodyInput = React.createRef();\r\n    const checkForPR = async () => {\r\n        await github\r\n            .fetchExistingPR()\r\n            .then((pull) => {\r\n            if (pull) {\r\n                setFetchedPR(pull);\r\n            }\r\n            else {\r\n                setFetchedPR({ id: null });\r\n            }\r\n        })\r\n            .catch(() => {\r\n            setPrError(`Could not fetch Pull Requests`);\r\n        });\r\n    };\r\n    const createPR = () => {\r\n        return github\r\n            .createPR(titleInput.current.value, bodyInput.current.value)\r\n            .then(() => {\r\n            checkForPR(); // TODO - can we use PR from response instead of refetching?\r\n        })\r\n            .catch(() => {\r\n            setPrError(`Pull Request failed, are you sure you have any changes?`);\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        checkForPR();\r\n    }, []);\r\n    if (prError) {\r\n        return (React.createElement(PrModalBody, null,\r\n            React.createElement(ModalDescription, null,\r\n                React.createElement(\"p\", null, prError))));\r\n    }\r\n    if (!fetchedPR) {\r\n        return (React.createElement(PrModalBody, null,\r\n            React.createElement(ModalDescription, null,\r\n                React.createElement(\"p\", null, \"Loading...\"))));\r\n    }\r\n    let workingBranch = github.branchName;\r\n    let baseBranch = github.baseBranch;\r\n    if (github.isFork) {\r\n        const username = github.workingRepoFullName.split('/')[0];\r\n        const baseOwner = github.baseRepoFullName.split('/')[0];\r\n        workingBranch = `${username}:${workingBranch}`;\r\n        baseBranch = `${baseOwner}:${baseBranch}`;\r\n    }\r\n    if (workingBranch === baseBranch) {\r\n        return (React.createElement(PrModalBody, null,\r\n            React.createElement(ModalDescription, null,\r\n                React.createElement(\"p\", null,\r\n                    \"You are currently on the base branch: \",\r\n                    React.createElement(\"b\", null, baseBranch),\r\n                    \".\"),\r\n                React.createElement(\"p\", null, \"To create a Pull Request you must first switch to a new branch.\"))));\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(PrModalBody, null,\r\n            !fetchedPR.id && (React.createElement(React.Fragment, null,\r\n                React.createElement(ModalDescription, null,\r\n                    \"Create a pull request from \",\r\n                    React.createElement(\"b\", null, workingBranch),\r\n                    \" into\",\r\n                    ' ',\r\n                    React.createElement(\"b\", null, baseBranch),\r\n                    \".\",\r\n                    ' ',\r\n                    React.createElement(\"a\", { target: \"_blank\", href: `https://github.com/${github.baseRepoFullName}/compare/${github.baseBranch}...${github.workingRepoFullName.split('/')[0]}:${github.branchName}` }, \"View changes on GitHub\"),\r\n                    \".\"),\r\n                React.createElement(FieldMeta, { label: \"PR Title\", name: \"title\" },\r\n                    React.createElement(Input, { type: \"text\", ref: titleInput })),\r\n                React.createElement(FieldMeta, { label: \"PR Description\", name: \"description\" },\r\n                    React.createElement(TextArea, { ref: bodyInput })))),\r\n            fetchedPR.id && (React.createElement(ModalDescription, null,\r\n                \"You've created a pull request from \",\r\n                React.createElement(\"b\", null, workingBranch),\r\n                \" into\",\r\n                ' ',\r\n                React.createElement(\"b\", null, baseBranch),\r\n                \".\"))),\r\n        React.createElement(ModalActions, null,\r\n            !fetchedPR.id && (React.createElement(AsyncButton, { primary: true, name: \"Create Pull Request\", action: createPR })),\r\n            fetchedPR && fetchedPR.html_url && (React.createElement(React.Fragment, null,\r\n                React.createElement(TinaButton, { as: \"a\", \r\n                    // @ts-ignore\r\n                    href: `https://github.com/${github.baseRepoFullName}/compare/${github.baseBranch}...${github.workingRepoFullName.split('/')[0]}:${github.branchName}`, target: \"_blank\" }, \"View Diff\"),\r\n                React.createElement(TinaButton, { as: \"a\", primary: true, \r\n                    // @ts-ignore\r\n                    href: fetchedPR.html_url, target: \"_blank\" }, \"View Pull Request\"))))));\r\n};\r\nconst TinaButton = styled(RawTinaButton) `\n  height: auto;\n  padding-top: 0.8125rem;\n  padding-bottom: 0.8125rem;\n  text-decoration: none;\n  line-height: 1;\n`;\r\nconst ModalDescription = styled.p `\n  margin-bottom: 1rem;\n\n  b {\n    font-weight: bold;\n  }\n`;\r\nconst PrModalBody = styled(ModalBody) `\n  padding: 1.25rem 1.25rem 0 1.25rem;\n`;\r\n//# sourceMappingURL=PRModal.js.map","references":["/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/styles/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/fields/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/tinacms/build/index.d.ts","/Users/TimMoreton/Code/tinacms/node_modules/@types/styled-components/index.d.ts","/Users/TimMoreton/Code/tinacms/node_modules/@types/react/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/components/AsyncButton.tsx","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/github-client/index.ts"],"map":"{\"version\":3,\"file\":\"PRModal.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/toolbar-plugins/pull-request/PRModal.tsx\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;EAgBE;AAEF,OAAO,EAAE,MAAM,IAAI,aAAa,EAAE,MAAM,iBAAiB,CAAA;AACzD,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAA;AACjD,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AACpE,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAA;AAG1D,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,EAAE;IAC1B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAA;IAC1C,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAM,SAAS,CAAC,CAAA;IAC1D,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;IACpB,MAAM,MAAM,GAAiB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAA;IAE3C,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,EAAS,CAAA;IAC3C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,EAAS,CAAA;IAE1C,MAAM,UAAU,GAAG,KAAK,IAAI,EAAE;QAC5B,MAAM,MAAM;aACT,eAAe,EAAE;aACjB,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,IAAI,CAAC,CAAA;aACnB;iBAAM;gBACL,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;aAC3B;QACH,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACV,UAAU,CAAC,+BAA+B,CAAC,CAAA;QAC7C,CAAC,CAAC,CAAA;IACN,CAAC,CAAA;IAED,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,OAAO,MAAM;aACV,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;aAC3D,IAAI,CAAC,GAAG,EAAE;YACT,UAAU,EAAE,CAAA,CAAC,4DAA4D;QAC3E,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACV,UAAU,CAAC,yDAAyD,CAAC,CAAA;QACvE,CAAC,CAAC,CAAA;IACN,CAAC,CAAA;IAED,SAAS,CAAC,GAAG,EAAE;QACb,UAAU,EAAE,CAAA;IACd,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,IAAI,OAAO,EAAE;QACX,OAAO,CACL,oBAAC,WAAW;YACV,oBAAC,gBAAgB;gBACf,+BAAI,OAAO,CAAK,CACC,CACP,CACf,CAAA;KACF;IAED,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,CACL,oBAAC,WAAW;YACV,oBAAC,gBAAgB;gBACf,4CAAiB,CACA,CACP,CACf,CAAA;KACF;IAED,IAAI,aAAa,GAAG,MAAM,CAAC,UAAU,CAAA;IACrC,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;IAElC,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,MAAM,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACzD,MAAM,SAAS,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,aAAa,GAAG,GAAG,QAAQ,IAAI,aAAa,EAAE,CAAA;QAC9C,UAAU,GAAG,GAAG,SAAS,IAAI,UAAU,EAAE,CAAA;KAC1C;IAED,IAAI,aAAa,KAAK,UAAU,EAAE;QAChC,OAAO,CACL,oBAAC,WAAW;YACV,oBAAC,gBAAgB;gBACf;;oBACwC,+BAAI,UAAU,CAAK;wBACvD;gBACJ,iGAAsE,CACrD,CACP,CACf,CAAA;KACF;IAED,OAAO,CACL;QACE,oBAAC,WAAW;YACT,CAAC,SAAS,CAAC,EAAE,IAAI,CAChB;gBACE,oBAAC,gBAAgB;;oBACY,+BAAI,aAAa,CAAK;;oBAAM,GAAG;oBAC1D,+BAAI,UAAU,CAAK;;oBAAE,GAAG;oBACxB,2BACE,MAAM,EAAC,QAAQ,EACf,IAAI,EAAE,sBAAsB,MAAM,CAAC,gBAAgB,YACjD,MAAM,CAAC,UACT,MAAM,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAC5C,MAAM,CAAC,UACT,EAAE,6BAGA;wBAEa;gBACnB,oBAAC,SAAS,IAAC,KAAK,EAAC,UAAU,EAAC,IAAI,EAAC,OAAO;oBACtC,oBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,GAAG,EAAE,UAAU,GAAI,CAC5B;gBACZ,oBAAC,SAAS,IAAC,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,aAAa;oBAClD,oBAAC,QAAQ,IAAC,GAAG,EAAE,SAAS,GAAI,CAClB,CACX,CACJ;YACA,SAAS,CAAC,EAAE,IAAI,CACf,oBAAC,gBAAgB;;gBACoB,+BAAI,aAAa,CAAK;;gBAAM,GAAG;gBAClE,+BAAI,UAAU,CAAK;oBACF,CACpB,CACW;QACd,oBAAC,YAAY;YACV,CAAC,SAAS,CAAC,EAAE,IAAI,CAChB,oBAAC,WAAW,IAAC,OAAO,QAAC,IAAI,EAAC,qBAAqB,EAAC,MAAM,EAAE,QAAQ,GAAI,CACrE;YACA,SAAS,IAAI,SAAS,CAAC,QAAQ,IAAI,CAClC;gBACE,oBAAC,UAAU,IACT,EAAE,EAAC,GAAG;oBACN,aAAa;oBACb,IAAI,EAAE,sBAAsB,MAAM,CAAC,gBAAgB,YACjD,MAAM,CAAC,UACT,MAAM,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAC5C,MAAM,CAAC,UACT,EAAE,EACF,MAAM,EAAC,QAAQ,gBAGJ;gBACb,oBAAC,UAAU,IACT,EAAE,EAAC,GAAG,EACN,OAAO;oBACP,aAAa;oBACb,IAAI,EAAE,SAAS,CAAC,QAAQ,EACxB,MAAM,EAAC,QAAQ,wBAGJ,CACZ,CACJ,CACY,CACd,CACJ,CAAA;AACH,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC,CAAA;;;;;;CAMvC,CAAA;AAED,MAAM,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAA;;;;;;CAMhC,CAAA;AAED,MAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;;CAEpC,CAAA\"}","dts":{"name":"/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/toolbar-plugins/pull-request/PRModal.d.ts","writeByteOrderMark":false,"text":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\n/// <reference types=\"react\" />\r\nexport declare const PRModal: () => JSX.Element;\r\n"}}
