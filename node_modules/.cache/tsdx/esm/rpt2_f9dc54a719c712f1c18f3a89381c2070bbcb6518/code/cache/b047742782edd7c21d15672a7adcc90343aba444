{"code":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\nimport { useCMS, Modal, ModalPopup, ModalHeader, ModalBody, ModalActions, } from 'tinacms';\r\nimport { StyleReset } from '@tinacms/styles';\r\nimport { AsyncButton } from '../components/AsyncButton';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nexport function GithubAuthenticationModal({ onAuthSuccess, close, }) {\r\n    const cms = useCMS();\r\n    return (React.createElement(ModalBuilder, { title: \"GitHub Authorization\", message: \"To save edits, Tina requires GitHub authorization. On save, changes will get commited to GitHub using your account.\", close: close, actions: [\r\n            {\r\n                name: 'Cancel',\r\n                action: close,\r\n            },\r\n            {\r\n                name: 'Continue to GitHub',\r\n                action: async () => {\r\n                    await cms.api.github.authenticate();\r\n                    onAuthSuccess();\r\n                },\r\n                primary: true,\r\n            },\r\n        ] }));\r\n}\r\nexport function CreateForkModal({ onForkCreated, close, }) {\r\n    const cms = useCMS();\r\n    const [error, setError] = useState();\r\n    return (React.createElement(ModalBuilder, { title: \"GitHub Authorization\", message: \"A fork of this website is required to save changes.\", close: close, actions: [\r\n            {\r\n                name: 'Cancel',\r\n                action: close,\r\n            },\r\n            {\r\n                name: 'Create Fork',\r\n                action: async () => {\r\n                    try {\r\n                        await cms.api.github.createFork();\r\n                        onForkCreated();\r\n                    }\r\n                    catch (e) {\r\n                        setError('Forking repository failed. Are you sure the repository is public?');\r\n                        throw e;\r\n                    }\r\n                },\r\n                primary: true,\r\n            },\r\n        ], error: error }));\r\n}\r\nexport function ModalBuilder(modalProps) {\r\n    return (React.createElement(StyleReset, null,\r\n        React.createElement(Modal, null,\r\n            React.createElement(ModalPopup, null,\r\n                React.createElement(ModalHeader, { close: modalProps.close }, modalProps.title),\r\n                React.createElement(ModalBody, { padded: true },\r\n                    React.createElement(\"p\", null, modalProps.message),\r\n                    modalProps.error && React.createElement(ErrorLabel, null, modalProps.error)),\r\n                React.createElement(ModalActions, null, modalProps.actions.map((action) => (React.createElement(AsyncButton, Object.assign({}, action)))))))));\r\n}\r\nexport const ErrorLabel = styled.p `\n  color: var(--tina-color-error) !important;\n`;\r\n//# sourceMappingURL=GithubAuthModal.js.map","references":["/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/tinacms/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/node_modules/@tinacms/styles/build/index.d.ts","/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/components/AsyncButton.tsx","/Users/TimMoreton/Code/tinacms/node_modules/@types/react/index.d.ts","/Users/TimMoreton/Code/tinacms/node_modules/@types/styled-components/index.d.ts"],"map":"{\"version\":3,\"file\":\"GithubAuthModal.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/github-editing-context/GithubAuthModal.tsx\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;EAgBE;AAEF,OAAO,EACL,MAAM,EACN,KAAK,EACL,UAAU,EACV,WAAW,EACX,SAAS,EACT,YAAY,GACb,MAAM,SAAS,CAAA;AAChB,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAA;AACvD,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACvC,OAAO,MAAM,MAAM,mBAAmB,CAAA;AAOtC,MAAM,UAAU,yBAAyB,CAAC,EACxC,aAAa,EACb,KAAK,GAC0B;IAC/B,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;IACpB,OAAO,CACL,oBAAC,YAAY,IACX,KAAK,EAAC,sBAAsB,EAC5B,OAAO,EAAC,qHAAqH,EAC7H,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,MAAM,EAAE,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,CAAA;oBACnC,aAAa,EAAE,CAAA;gBACjB,CAAC;gBACD,OAAO,EAAE,IAAI;aACd;SACF,GACD,CACH,CAAA;AACH,CAAC;AAOD,MAAM,UAAU,eAAe,CAAC,EAC9B,aAAa,EACb,KAAK,GACgB;IACrB,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;IACpB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAsB,CAAA;IACxD,OAAO,CACL,oBAAC,YAAY,IACX,KAAK,EAAC,sBAAsB,EAC5B,OAAO,EAAC,qDAAqD,EAC7D,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,KAAK,IAAI,EAAE;oBACjB,IAAI;wBACF,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAA;wBACjC,aAAa,EAAE,CAAA;qBAChB;oBAAC,OAAO,CAAC,EAAE;wBACV,QAAQ,CACN,mEAAmE,CACpE,CAAA;wBACD,MAAM,CAAC,CAAA;qBACR;gBACH,CAAC;gBACD,OAAO,EAAE,IAAI;aACd;SACF,EACD,KAAK,EAAE,KAAK,GACZ,CACH,CAAA;AACH,CAAC;AAUD,MAAM,UAAU,YAAY,CAAC,UAA6B;IACxD,OAAO,CACL,oBAAC,UAAU;QACT,oBAAC,KAAK;YACJ,oBAAC,UAAU;gBACT,oBAAC,WAAW,IAAC,KAAK,EAAE,UAAU,CAAC,KAAK,IAAG,UAAU,CAAC,KAAK,CAAe;gBACtE,oBAAC,SAAS,IAAC,MAAM;oBACf,+BAAI,UAAU,CAAC,OAAO,CAAK;oBAC1B,UAAU,CAAC,KAAK,IAAI,oBAAC,UAAU,QAAE,UAAU,CAAC,KAAK,CAAc,CACtD;gBACZ,oBAAC,YAAY,QACV,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,CACvC,oBAAC,WAAW,oBAAK,MAAM,EAAI,CAC5B,CAAC,CACW,CACJ,CACP,CACG,CACd,CAAA;AACH,CAAC;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAA;;CAEjC,CAAA\"}","dts":{"name":"/Users/TimMoreton/Code/tinacms/packages/react-tinacms-github/src/github-editing-context/GithubAuthModal.d.ts","writeByteOrderMark":false,"text":"/**\r\n\nCopyright 2019 Forestry.io Inc\r\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\n*/\r\n/// <reference types=\"react\" />\r\nexport interface GithubAuthenticationModalProps {\r\n    onAuthSuccess(): void;\r\n    close(): void;\r\n}\r\nexport declare function GithubAuthenticationModal({ onAuthSuccess, close, }: GithubAuthenticationModalProps): JSX.Element;\r\nexport interface CreateForkModalProps {\r\n    onForkCreated(): void;\r\n    close(): void;\r\n}\r\nexport declare function CreateForkModal({ onForkCreated, close, }: CreateForkModalProps): JSX.Element;\r\ninterface ModalBuilderProps {\r\n    title: string;\r\n    message: string;\r\n    error?: string;\r\n    actions: any[];\r\n    close(): void;\r\n}\r\nexport declare function ModalBuilder(modalProps: ModalBuilderProps): JSX.Element;\r\nexport declare const ErrorLabel: import(\"styled-components\").StyledComponent<\"p\", any, {}, never>;\r\nexport {};\r\n"}}
